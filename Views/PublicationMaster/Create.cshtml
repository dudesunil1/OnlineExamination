@model OnlineExamination.Models.PublicationViewModel


@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="breadcrumb-with-buttons mb-24 flex-between flex-wrap gap-8">
        <!-- Breadcrumb Start -->
        <div class="breadcrumb mb-24">
            <ul class="flex-align gap-4">
                <li><a href="index.html" class="text-gray-200 fw-normal text-15 hover-text-main-600">Home</a></li>
                <li><span class="text-gray-500 fw-normal d-flex"><i class="ph ph-caret-right"></i></span></li>
                <li><span class="text-main-600 fw-normal text-15">Create Group</span></li>
            </ul>
        </div>
        <!-- Breadcrumb End -->
    </div>

    <!-- Course Tab Start -->
    <div class="card">
        <div class="card-header border-bottom border-gray-100 flex-align gap-8">
            <h5 class="mb-0">Publication Master</h5>
            <button type="button" class="text-main-600 text-md d-flex" data-bs-toggle="tooltip" data-bs-placement="top" title="Course Details">
                <i class="ph-fill ph-question"></i>
            </button>
        </div>
        <div class="card-body">

            <div class="row gy-20">
                <div class="col-xxl-12 col-md-12 col-sm-12">
                    <div class="row g-20">
                        <div class="col-sm-12">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                @Html.LabelFor(model => model.Pub_Name)
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.TextBoxFor(model => model.Pub_Name, new { htmlAttributes = new { @class = "text-counter placeholder-13 form-control py-11 pe-76" } })
                                @Html.ValidationMessageFor(model => model.Pub_Name, "", new { @class = "text-danger" })
                            </div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="flex-align justify-content-end gap-8">

                    <input type="submit" name="Action" value="Back To List" class="btn btn-outline-main rounded-pill py-9" />
                    <input type="submit" name="Action" value="Cancel" class="btn btn-outline-main rounded-pill py-9" />
                    <input type="submit" name="Action" value="Continue" class="btn btn-main rounded-pill py-9" />

                </div>
            </div>
            <asp:HiddenField ID="hdnPubID" runat="server" />




        </div>
    </div>
    <script>

        // ========================== Export Js Start ==============================
        document.getElementById('exportOptions').addEventListener('change', function () {
            const format = this.value;
            const table = document.getElementById('tblSuntech');
            let data = [];
            const headers = [];

            // Get the table headers
            table.querySelectorAll('thead th').forEach(th => {
                headers.push(th.innerText.trim());
            });

            // Get the table rows
            table.querySelectorAll('tbody tr').forEach(tr => {
                const row = {};
                tr.querySelectorAll('td').forEach((td, index) => {
                    row[headers[index]] = td.innerText.trim();
                });
                data.push(row);
            });

            if (format === 'csv') {
                downloadCSV(data);
            } else if (format === 'json') {
                downloadJSON(data);
            }
        });

        function downloadCSV(data) {
            const csv = data.map(row => Object.values(row).join(',')).join('\n');
            const blob = new Blob([csv], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'students.csv';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }

        function downloadJSON(data) {
            const json = JSON.stringify(data, null, 2);
            const blob = new Blob([json], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'students.json';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
        // ========================== Export Js End ==============================

        // Table Header Checkbox checked all js Start
        $('#selectAll').on('change', function () {
            $('.form-check .form-check-input').prop('checked', $(this).prop('checked'));
        });

        // Data Tables
        new DataTable('#tblSuntech', {
            searching: false,
            lengthChange: false,
            info: false,   // Bottom Left Text => Showing 1 to 10 of 12 entries
            paging: false, // Pagination False
            "columnDefs": [
                { "orderable": false, "targets": [0, 6] } // Disables sorting on the 7th column (index 6)
            ]
        });
    </script>
}