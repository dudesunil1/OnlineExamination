@model OnlineExamination.Models.QuestionMasterViewModel

@{
    ViewBag.Title = "Create Question";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://cdn.tiny.cloud/1/@ViewData["ApiKey"]/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="dashboard-body">

    <div class="breadcrumb-with-buttons mb-24 flex-between flex-wrap gap-8">
        <!-- Breadcrumb Start -->
        <div class="breadcrumb mb-24">
            <ul class="flex-align gap-4">
                <li><a href="index.html" class="text-gray-200 fw-normal text-15 hover-text-main-600">Home</a></li>
                <li><span class="text-gray-500 fw-normal d-flex"><i class="ph ph-caret-right"></i></span></li>
                <li><span class="text-main-600 fw-normal text-15">Create Question</span></li>
            </ul>
        </div>
        <!-- Breadcrumb End -->
    </div>


    <!-- Course Tab Start -->
    <div class="card">
        <div class="card-header border-bottom border-gray-100 flex-align gap-8">
            <h5 class="mb-0">Question Master</h5>
            <button type="button" class="text-main-600 text-md d-flex" data-bs-toggle="tooltip" data-bs-placement="top" title="Question Details">
                <i class="ph-fill ph-question"></i>
            </button>
        </div>
        <div class="card-body">

            <div class="row gy-20">
                <div class="col-xxl-12 col-md-12 col-sm-12">
                    <div class="row g-20">
                        <div class="col-sm-6">
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Subject
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.DropDownListFor(
                                 model => model.Ques_SubId,
                                 new SelectList(ViewBag.SubjectList, "Value", "Text"),
                                 "Select Subject",
                                 new { @class = "form-select py-9 placeholder-13 text-15", id = "Ques_SubId" }
                                 )

                            </div>
                        </div>
                        <div class="col-sm-6">
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Class
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.DropDownListFor(
                                model => model.Ques_ClassId,
                                 new SelectList(ViewBag.ClassList, "Value", "Text"),
                                 "Select Class",
                                 new { @class = "form-select py-9 placeholder-13 text-15", id = "Ques_ClassId" }
                                 )
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Topic
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.DropDownListFor(
                                 model => model.Ques_TopId,
                                 new SelectList(ViewBag.TopicList, "Value", "Text"),
                                 "Select Topic",
                                 new { @class = "form-select py-9 placeholder-13 text-15", id = "Ques_TopId" }
                                 )
                            </div>
                        </div>
                        <div class="col-sm-6">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Publication
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.DropDownListFor(
                                 model => model.Ques_PubId,
                                 new SelectList(ViewBag.PublicationList, "Value", "Text"),
                                 "Select Publication",
                                 new { @class = "form-select py-9 placeholder-13 text-15", id = "Ques_PubId" }
                                 )

                            </div>
                        </div>
                        <div class="col-sm-4">
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                CET Marks
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.TextBoxFor(model => model.Ques_Mark, new { type = "number", @class = "text-counter placeholder-13 form-control py-11 pe-76", id = "Ques_Mark" })
                            </div>
                        </div>
                        <div class="col-sm-4">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                JEE Marks
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">

                                @Html.TextBoxFor(model => model.Ques_JEEMark, new { type = "number", @class = "text-counter placeholder-13 form-control py-11 pe-76", id = "Ques_JEEMark" })
                            </div>
                        </div>
                        <div class="col-sm-4">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Negative Marks
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                @Html.TextBoxFor(model => model.Ques_Negative, new { type = "number", @class = "text-counter placeholder-13 form-control py-11 pe-76", id = "Ques_Negative" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                        </div>

                        <div class="col-sm-12">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Enter Question
                                <span class="text-13 text-gray-400 fw-medium">(Required)</span>
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_Question" name="Ques_Question"> </textarea>
                            </div>
                        </div>
                        <div class="col-sm-12">

                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Answer
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_Answer" name="Ques_Answer"> </textarea>
                            </div>
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Option 1
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_OptionB" name="Ques_OptionB"> </textarea>
                            </div>
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Option 2
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_OptionC" name="Ques_OptionC"> </textarea>
                            </div>
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Option 3
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_OptionD" name="Ques_OptionD"> </textarea>
                            </div>
                            <label for="courseTitle" class="h5 mb-8 fw-semibold font-heading">
                                Answer Description
                            </label>
                            <div class="position-relative">
                                <textarea id="Ques_SolutionDetails" name="Ques_SolutionDetails"> </textarea>
                            </div>


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="flex-align justify-content-end gap-8">

                    <input type="submit" name="Action" value="Back To List" class="btn btn-outline-main rounded-pill py-9" />
                    <input type="submit" name="Action" value="Cancel" class="btn btn-outline-main rounded-pill py-9" />
                    <input type="submit" name="Action" value="Continue" class="btn btn-main rounded-pill py-9" />
                    <button type="button" Id="InActivateKey" class="btn btn-main rounded-pill py-9">Inactivate Key</button>

                </div>
            </div>
            <asp:HiddenField ID="hdnPubID" runat="server" />




        </div>
    </div>

</div>

    @*<script src="~/Content/assets/js/jquery-3.7.1.min.js"></script>*@
    <script>


        $(document).ready(function () {
            function fetchTopics() {
                const subjectID = $("#Ques_SubId").val();
                const classID = $("#Ques_ClassId").val();

                console.log("SubjectID=" + subjectID);
                console.log("Ques_ClassId=" + classID);


                const $topicsDropdown = $("#Ques_TopId");

                // Clear the sub-subject dropdown
                $topicsDropdown.empty();
                $topicsDropdown.append('<option value="">Select Topics</option>');

                if (subjectID > 0 && classID>0  ) {
                    // Make an AJAX request to fetch sub-subjects
                    $.ajax({
                        url: '/Master/GetTopicsBySubjectIDAndClassID?SubjectID=' + subjectID + '&ClassID=' + classID, // Replace with the actual controller path
                        type: 'GET',
                        contentType: 'json',
                        success: function (response) {
                            console.log("success");
                            console.log(response);
                            if (response && response.length > 0) {
                                // Populate the sub-subject dropdown with the response data
                                response.forEach(function (topic) {
                                    $topicsDropdown.append(
                                        `<option value="${topic.Top_Id}">${topic.Top_Name}</option>`
                                    );
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error fetching sub-subjects:", error);
                        }
                    });
                }
            }
            $("#Ques_SubId").change(fetchTopics);
            $("#Ques_ClassId").change(fetchTopics);
        })

        $(document).ready(function () {

            fetchTopics();
        });
    $(document).ready(function () {
        var key = '@ViewData["ApiKey"]';

        $('#InActivateKey').click(function () {
            $.ajax({
                url: '@Url.Action("InActivateKey", "Question")', // Controller/Action
                type: 'POST',
                data: { apiKey: key },
                success: function (response) {
                    if (response.success) {
                        alert(response.message); window.location.reload();
                    }
                },
                error: function () {
                    alert("An error occurred.");
                }
            });
        });
    });
    </script>
    <script>
        tinymce.init({
            selector: '#Ques_Question',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });
        tinymce.init({
            selector: '#Ques_Answer',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });
        tinymce.init({
            selector: '#Ques_OptionB',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });
        tinymce.init({
            selector: '#Ques_OptionC',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });
        tinymce.init({
            selector: '#Ques_OptionD',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });
        tinymce.init({
            selector: '#Ques_SolutionDetails',
            plugins: 'print preview importcss searchreplace autolink directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor insertdatetime advlist lists wordcount textpattern help charmap quickbars emoticons',
            toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist checklist | forecolor backcolor casechange removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media link anchor codesample | ltr rtl',
            height: 200,
            setup: function (editor) {
                editor.on('init', function () {
                    this.getDoc().body.style.fontSize = '14px';
                });
            }
        });


    </script>
    <script>

        // ========================== Export Js Start ==============================
        const element = document.getElementById("exportOptions");
        if (element) {

            element.addEventListener('change', function () {
                const format = this.value;
                const table = document.getElementById('tblSuntech');
                let data = [];
                const headers = [];

                // Get the table headers
                table.querySelectorAll('thead th').forEach(th => {
                    headers.push(th.innerText.trim());
                });

                // Get the table rows
                table.querySelectorAll('tbody tr').forEach(tr => {
                    const row = {};
                    tr.querySelectorAll('td').forEach((td, index) => {
                        row[headers[index]] = td.innerText.trim();
                    });
                    data.push(row);
                });

                if (format === 'csv') {
                    downloadCSV(data);
                } else if (format === 'json') {
                    downloadJSON(data);
                }
            });
        }
        function downloadCSV(data) {
            const csv = data.map(row => Object.values(row).join(',')).join('\n');
            const blob = new Blob([csv], { type: 'text/csv' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'students.csv';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }

        function downloadJSON(data) {
            const json = JSON.stringify(data, null, 2);
            const blob = new Blob([json], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'students.json';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }
        // ========================== Export Js End ==============================

        // Table Header Checkbox checked all js Start
        $('#selectAll').on('change', function () {
            $('.form-check .form-check-input').prop('checked', $(this).prop('checked'));
        });

        // Data Tables
        new DataTable('#tblSuntech', {
            searching: false,
            lengthChange: false,
            info: false,   // Bottom Left Text => Showing 1 to 10 of 12 entries
            paging: false, // Pagination False
            "columnDefs": [
                { "orderable": false, "targets": [0, 6] } // Disables sorting on the 7th column (index 6)
            ]
        });
    </script>



}

